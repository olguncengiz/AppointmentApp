// Code generated by protoc-gen-go. DO NOT EDIT.
// source: appointment.proto

package appointment

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request message containing the user's name.
type ClientName struct {
	ClientName           string   `protobuf:"bytes,1,opt,name=clientName" json:"clientName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientName) Reset()         { *m = ClientName{} }
func (m *ClientName) String() string { return proto.CompactTextString(m) }
func (*ClientName) ProtoMessage()    {}
func (*ClientName) Descriptor() ([]byte, []int) {
	return fileDescriptor_appointment_f65d4a87dae35d98, []int{0}
}
func (m *ClientName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientName.Unmarshal(m, b)
}
func (m *ClientName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientName.Marshal(b, m, deterministic)
}
func (dst *ClientName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientName.Merge(dst, src)
}
func (m *ClientName) XXX_Size() int {
	return xxx_messageInfo_ClientName.Size(m)
}
func (m *ClientName) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientName.DiscardUnknown(m)
}

var xxx_messageInfo_ClientName proto.InternalMessageInfo

func (m *ClientName) GetClientName() string {
	if m != nil {
		return m.ClientName
	}
	return ""
}

type AppointmentReq struct {
	AppInfo              *AppointmentInfo `protobuf:"bytes,1,opt,name=appInfo" json:"appInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *AppointmentReq) Reset()         { *m = AppointmentReq{} }
func (m *AppointmentReq) String() string { return proto.CompactTextString(m) }
func (*AppointmentReq) ProtoMessage()    {}
func (*AppointmentReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_appointment_f65d4a87dae35d98, []int{1}
}
func (m *AppointmentReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppointmentReq.Unmarshal(m, b)
}
func (m *AppointmentReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppointmentReq.Marshal(b, m, deterministic)
}
func (dst *AppointmentReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppointmentReq.Merge(dst, src)
}
func (m *AppointmentReq) XXX_Size() int {
	return xxx_messageInfo_AppointmentReq.Size(m)
}
func (m *AppointmentReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AppointmentReq.DiscardUnknown(m)
}

var xxx_messageInfo_AppointmentReq proto.InternalMessageInfo

func (m *AppointmentReq) GetAppInfo() *AppointmentInfo {
	if m != nil {
		return m.AppInfo
	}
	return nil
}

type AppointmentRep struct {
	Message              string   `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppointmentRep) Reset()         { *m = AppointmentRep{} }
func (m *AppointmentRep) String() string { return proto.CompactTextString(m) }
func (*AppointmentRep) ProtoMessage()    {}
func (*AppointmentRep) Descriptor() ([]byte, []int) {
	return fileDescriptor_appointment_f65d4a87dae35d98, []int{2}
}
func (m *AppointmentRep) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppointmentRep.Unmarshal(m, b)
}
func (m *AppointmentRep) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppointmentRep.Marshal(b, m, deterministic)
}
func (dst *AppointmentRep) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppointmentRep.Merge(dst, src)
}
func (m *AppointmentRep) XXX_Size() int {
	return xxx_messageInfo_AppointmentRep.Size(m)
}
func (m *AppointmentRep) XXX_DiscardUnknown() {
	xxx_messageInfo_AppointmentRep.DiscardUnknown(m)
}

var xxx_messageInfo_AppointmentRep proto.InternalMessageInfo

func (m *AppointmentRep) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AppointmentInfo struct {
	ClientName           string   `protobuf:"bytes,1,opt,name=clientName" json:"clientName,omitempty"`
	Date                 string   `protobuf:"bytes,2,opt,name=date" json:"date,omitempty"`
	Time                 string   `protobuf:"bytes,3,opt,name=time" json:"time,omitempty"`
	Status               string   `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppointmentInfo) Reset()         { *m = AppointmentInfo{} }
func (m *AppointmentInfo) String() string { return proto.CompactTextString(m) }
func (*AppointmentInfo) ProtoMessage()    {}
func (*AppointmentInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_appointment_f65d4a87dae35d98, []int{3}
}
func (m *AppointmentInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppointmentInfo.Unmarshal(m, b)
}
func (m *AppointmentInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppointmentInfo.Marshal(b, m, deterministic)
}
func (dst *AppointmentInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppointmentInfo.Merge(dst, src)
}
func (m *AppointmentInfo) XXX_Size() int {
	return xxx_messageInfo_AppointmentInfo.Size(m)
}
func (m *AppointmentInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_AppointmentInfo.DiscardUnknown(m)
}

var xxx_messageInfo_AppointmentInfo proto.InternalMessageInfo

func (m *AppointmentInfo) GetClientName() string {
	if m != nil {
		return m.ClientName
	}
	return ""
}

func (m *AppointmentInfo) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *AppointmentInfo) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

func (m *AppointmentInfo) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func init() {
	proto.RegisterType((*ClientName)(nil), "appointment.ClientName")
	proto.RegisterType((*AppointmentReq)(nil), "appointment.AppointmentReq")
	proto.RegisterType((*AppointmentRep)(nil), "appointment.AppointmentRep")
	proto.RegisterType((*AppointmentInfo)(nil), "appointment.AppointmentInfo")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AppointmentClient is the client API for Appointment service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AppointmentClient interface {
	RequestAppointment(ctx context.Context, in *AppointmentReq, opts ...grpc.CallOption) (*AppointmentRep, error)
	DeleteAppointment(ctx context.Context, in *ClientName, opts ...grpc.CallOption) (*AppointmentRep, error)
}

type appointmentClient struct {
	cc *grpc.ClientConn
}

func NewAppointmentClient(cc *grpc.ClientConn) AppointmentClient {
	return &appointmentClient{cc}
}

func (c *appointmentClient) RequestAppointment(ctx context.Context, in *AppointmentReq, opts ...grpc.CallOption) (*AppointmentRep, error) {
	out := new(AppointmentRep)
	err := c.cc.Invoke(ctx, "/appointment.Appointment/RequestAppointment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appointmentClient) DeleteAppointment(ctx context.Context, in *ClientName, opts ...grpc.CallOption) (*AppointmentRep, error) {
	out := new(AppointmentRep)
	err := c.cc.Invoke(ctx, "/appointment.Appointment/DeleteAppointment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AppointmentServer is the server API for Appointment service.
type AppointmentServer interface {
	RequestAppointment(context.Context, *AppointmentReq) (*AppointmentRep, error)
	DeleteAppointment(context.Context, *ClientName) (*AppointmentRep, error)
}

func RegisterAppointmentServer(s *grpc.Server, srv AppointmentServer) {
	s.RegisterService(&_Appointment_serviceDesc, srv)
}

func _Appointment_RequestAppointment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppointmentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppointmentServer).RequestAppointment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appointment.Appointment/RequestAppointment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppointmentServer).RequestAppointment(ctx, req.(*AppointmentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Appointment_DeleteAppointment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppointmentServer).DeleteAppointment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appointment.Appointment/DeleteAppointment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppointmentServer).DeleteAppointment(ctx, req.(*ClientName))
	}
	return interceptor(ctx, in, info, handler)
}

var _Appointment_serviceDesc = grpc.ServiceDesc{
	ServiceName: "appointment.Appointment",
	HandlerType: (*AppointmentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RequestAppointment",
			Handler:    _Appointment_RequestAppointment_Handler,
		},
		{
			MethodName: "DeleteAppointment",
			Handler:    _Appointment_DeleteAppointment_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "appointment.proto",
}

func init() { proto.RegisterFile("appointment.proto", fileDescriptor_appointment_f65d4a87dae35d98) }

var fileDescriptor_appointment_f65d4a87dae35d98 = []byte{
	// 236 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0xcd, 0x4a, 0xc5, 0x30,
	0x10, 0x85, 0xad, 0x5e, 0xee, 0xc5, 0x29, 0x28, 0x77, 0x16, 0x1a, 0x54, 0x44, 0xb2, 0x12, 0x91,
	0x2e, 0x2a, 0xb8, 0x17, 0x5d, 0x28, 0x82, 0x48, 0xde, 0x20, 0xea, 0x28, 0x85, 0xe6, 0xcf, 0x4c,
	0xdf, 0xca, 0x87, 0x94, 0x46, 0x6b, 0x63, 0x41, 0xbb, 0x9b, 0xf9, 0xe6, 0xcc, 0x39, 0x09, 0x03,
	0x6b, 0xed, 0xbd, 0x6b, 0x2c, 0x1b, 0xb2, 0x5c, 0xf9, 0x77, 0xc7, 0x0e, 0xcb, 0x0c, 0xc9, 0x73,
	0x80, 0xeb, 0xb6, 0x21, 0xcb, 0x0f, 0xda, 0x10, 0x1e, 0x03, 0x3c, 0xff, 0x74, 0xa2, 0x38, 0x29,
	0x4e, 0xb7, 0x55, 0x46, 0xe4, 0x2d, 0xec, 0x5c, 0x8d, 0xcb, 0x8a, 0x02, 0x5e, 0xc2, 0x4a, 0x7b,
	0x7f, 0x67, 0x5f, 0x5d, 0x92, 0x97, 0xf5, 0x51, 0x95, 0x27, 0x66, 0xea, 0x5e, 0xa3, 0x06, 0xb1,
	0x3c, 0x9b, 0x38, 0x79, 0x14, 0xb0, 0x32, 0x14, 0xa3, 0x7e, 0x1b, 0x82, 0x87, 0x56, 0x06, 0xd8,
	0x9d, 0xf8, 0xcc, 0x3d, 0x14, 0x11, 0x16, 0x2f, 0x9a, 0x49, 0x6c, 0xa6, 0x49, 0xaa, 0x7b, 0xc6,
	0x8d, 0x21, 0xb1, 0xf5, 0xc5, 0xfa, 0x1a, 0xf7, 0x60, 0x19, 0x59, 0x73, 0x17, 0xc5, 0x22, 0xd1,
	0xef, 0xae, 0xfe, 0x28, 0xa0, 0xcc, 0x32, 0xf1, 0x11, 0x50, 0x51, 0xe8, 0x28, 0x72, 0x4e, 0x0f,
	0xff, 0xfa, 0xab, 0xa2, 0x70, 0xf0, 0xcf, 0xd0, 0xcb, 0x0d, 0xbc, 0x87, 0xf5, 0x0d, 0xb5, 0xc4,
	0x94, 0x1b, 0xee, 0xff, 0xda, 0x19, 0x0f, 0x33, 0x63, 0xf6, 0xb4, 0x4c, 0x97, 0xbd, 0xf8, 0x0c,
	0x00, 0x00, 0xff, 0xff, 0xc6, 0x75, 0x3a, 0x95, 0xee, 0x01, 0x00, 0x00,
}
